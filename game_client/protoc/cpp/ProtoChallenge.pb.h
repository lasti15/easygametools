// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoChallenge.proto

#ifndef PROTOBUF_ProtoChallenge_2eproto__INCLUDED
#define PROTOBUF_ProtoChallenge_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Protocol.pb.h"
#include "User.pb.h"
// @@protoc_insertion_point(includes)

namespace ROG {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoChallenge_2eproto();
void protobuf_AssignDesc_ProtoChallenge_2eproto();
void protobuf_ShutdownFile_ProtoChallenge_2eproto();

class ProtoChallenge;
class ProtoChallengeResponse;
class ProtoChallengeAccepted;

// ===================================================================

class ProtoChallenge : public ::google::protobuf::Message {
 public:
  ProtoChallenge();
  virtual ~ProtoChallenge();
  
  ProtoChallenge(const ProtoChallenge& from);
  
  inline ProtoChallenge& operator=(const ProtoChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoChallenge& default_instance();
  
  void Swap(ProtoChallenge* other);
  
  // implements Message ----------------------------------------------
  
  ProtoChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoChallenge& from);
  void MergeFrom(const ProtoChallenge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 challengerId = 1;
  inline bool has_challengerid() const;
  inline void clear_challengerid();
  static const int kChallengerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 challengerid() const;
  inline void set_challengerid(::google::protobuf::uint64 value);
  
  static const int kChallengeFieldNumber = 102;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ROG::protocol::ProtocolMessage,
      ::google::protobuf::internal::MessageTypeTraits< ::ROG::protocol::ProtoChallenge >, 11, false >
    challenge;
  // @@protoc_insertion_point(class_scope:ROG.protocol.ProtoChallenge)
 private:
  inline void set_has_challengerid();
  inline void clear_has_challengerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 challengerid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoChallenge_2eproto();
  friend void protobuf_AssignDesc_ProtoChallenge_2eproto();
  friend void protobuf_ShutdownFile_ProtoChallenge_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoChallenge* default_instance_;
};
// -------------------------------------------------------------------

class ProtoChallengeResponse : public ::google::protobuf::Message {
 public:
  ProtoChallengeResponse();
  virtual ~ProtoChallengeResponse();
  
  ProtoChallengeResponse(const ProtoChallengeResponse& from);
  
  inline ProtoChallengeResponse& operator=(const ProtoChallengeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoChallengeResponse& default_instance();
  
  void Swap(ProtoChallengeResponse* other);
  
  // implements Message ----------------------------------------------
  
  ProtoChallengeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoChallengeResponse& from);
  void MergeFrom(const ProtoChallengeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ROG.protocol.User userDetails = 1;
  inline bool has_userdetails() const;
  inline void clear_userdetails();
  static const int kUserDetailsFieldNumber = 1;
  inline const ::ROG::protocol::User& userdetails() const;
  inline ::ROG::protocol::User* mutable_userdetails();
  inline ::ROG::protocol::User* release_userdetails();
  
  static const int kChallengeResponseFieldNumber = 103;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ROG::protocol::ProtocolMessage,
      ::google::protobuf::internal::MessageTypeTraits< ::ROG::protocol::ProtoChallengeResponse >, 11, false >
    challengeResponse;
  // @@protoc_insertion_point(class_scope:ROG.protocol.ProtoChallengeResponse)
 private:
  inline void set_has_userdetails();
  inline void clear_has_userdetails();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ROG::protocol::User* userdetails_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoChallenge_2eproto();
  friend void protobuf_AssignDesc_ProtoChallenge_2eproto();
  friend void protobuf_ShutdownFile_ProtoChallenge_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoChallengeResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProtoChallengeAccepted : public ::google::protobuf::Message {
 public:
  ProtoChallengeAccepted();
  virtual ~ProtoChallengeAccepted();
  
  ProtoChallengeAccepted(const ProtoChallengeAccepted& from);
  
  inline ProtoChallengeAccepted& operator=(const ProtoChallengeAccepted& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoChallengeAccepted& default_instance();
  
  void Swap(ProtoChallengeAccepted* other);
  
  // implements Message ----------------------------------------------
  
  ProtoChallengeAccepted* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoChallengeAccepted& from);
  void MergeFrom(const ProtoChallengeAccepted& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ROG.protocol.User hostDetails = 1;
  inline bool has_hostdetails() const;
  inline void clear_hostdetails();
  static const int kHostDetailsFieldNumber = 1;
  inline const ::ROG::protocol::User& hostdetails() const;
  inline ::ROG::protocol::User* mutable_hostdetails();
  inline ::ROG::protocol::User* release_hostdetails();
  
  static const int kChallengeAcceptedFieldNumber = 104;
  static ::google::protobuf::internal::ExtensionIdentifier< ::ROG::protocol::ProtocolMessage,
      ::google::protobuf::internal::MessageTypeTraits< ::ROG::protocol::ProtoChallengeAccepted >, 11, false >
    challengeAccepted;
  // @@protoc_insertion_point(class_scope:ROG.protocol.ProtoChallengeAccepted)
 private:
  inline void set_has_hostdetails();
  inline void clear_has_hostdetails();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ROG::protocol::User* hostdetails_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoChallenge_2eproto();
  friend void protobuf_AssignDesc_ProtoChallenge_2eproto();
  friend void protobuf_ShutdownFile_ProtoChallenge_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoChallengeAccepted* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoChallenge

// required uint64 challengerId = 1;
inline bool ProtoChallenge::has_challengerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoChallenge::set_has_challengerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoChallenge::clear_has_challengerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoChallenge::clear_challengerid() {
  challengerid_ = GOOGLE_ULONGLONG(0);
  clear_has_challengerid();
}
inline ::google::protobuf::uint64 ProtoChallenge::challengerid() const {
  return challengerid_;
}
inline void ProtoChallenge::set_challengerid(::google::protobuf::uint64 value) {
  set_has_challengerid();
  challengerid_ = value;
}

// -------------------------------------------------------------------

// ProtoChallengeResponse

// required .ROG.protocol.User userDetails = 1;
inline bool ProtoChallengeResponse::has_userdetails() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoChallengeResponse::set_has_userdetails() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoChallengeResponse::clear_has_userdetails() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoChallengeResponse::clear_userdetails() {
  if (userdetails_ != NULL) userdetails_->::ROG::protocol::User::Clear();
  clear_has_userdetails();
}
inline const ::ROG::protocol::User& ProtoChallengeResponse::userdetails() const {
  return userdetails_ != NULL ? *userdetails_ : *default_instance_->userdetails_;
}
inline ::ROG::protocol::User* ProtoChallengeResponse::mutable_userdetails() {
  set_has_userdetails();
  if (userdetails_ == NULL) userdetails_ = new ::ROG::protocol::User;
  return userdetails_;
}
inline ::ROG::protocol::User* ProtoChallengeResponse::release_userdetails() {
  clear_has_userdetails();
  ::ROG::protocol::User* temp = userdetails_;
  userdetails_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// ProtoChallengeAccepted

// required .ROG.protocol.User hostDetails = 1;
inline bool ProtoChallengeAccepted::has_hostdetails() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoChallengeAccepted::set_has_hostdetails() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoChallengeAccepted::clear_has_hostdetails() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoChallengeAccepted::clear_hostdetails() {
  if (hostdetails_ != NULL) hostdetails_->::ROG::protocol::User::Clear();
  clear_has_hostdetails();
}
inline const ::ROG::protocol::User& ProtoChallengeAccepted::hostdetails() const {
  return hostdetails_ != NULL ? *hostdetails_ : *default_instance_->hostdetails_;
}
inline ::ROG::protocol::User* ProtoChallengeAccepted::mutable_hostdetails() {
  set_has_hostdetails();
  if (hostdetails_ == NULL) hostdetails_ = new ::ROG::protocol::User;
  return hostdetails_;
}
inline ::ROG::protocol::User* ProtoChallengeAccepted::release_hostdetails() {
  clear_has_hostdetails();
  ::ROG::protocol::User* temp = hostdetails_;
  hostdetails_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace ROG

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoChallenge_2eproto__INCLUDED
